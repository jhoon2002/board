<?xml version="1.0" encoding="UTF-8"?> 

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/data/jpa 
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:annotation-config/>
    <tx:annotation-driven/>
    
    <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
        <property name="validator" ref="localValidator" />
    </bean>
    <bean id="localValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

    <!-- 
    <bean id="writeRepository" class="com.jhoon.springboard.repository.WriteRepository" />
    <bean id="memberRepository" class="com.jhoon.springboard.repository.MemberRepository" />
    <bean id="boardRepository" class="com.jhoon.springboard.repository.BoardRepository" />
     -->
    <jpa:repositories base-package="com.jhoon.springboard.repository"/>
    
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/JPADB"/>
        <property name="username" value="root"/>
        <property name="password" value="1111"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- JPA 예외를 스프링 예외로 변환 -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.jhoon.springboard.entity"/> <!-- @Entity 탐색 시작 위치 -->
        <property name="jpaVendorAdapter">
            <!-- 하이버네이트 구현체 사용 -->
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties"> <!-- 하이버네이트 상세 설정 -->
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> <!-- 방언 -->
                <prop key="hibernate.show_sql">true</prop>                   <!-- SQL 보기 -->
                <prop key="hibernate.format_sql">true</prop>                 <!-- SQL 정렬해서 보기 -->
                <prop key="hibernate.use_sql_comments">false</prop>           <!-- SQL 코멘트 보기 -->
                <prop key="hibernate.id.new_generator_mappings">true</prop>  <!-- 새 버전의 ID 생성 옵션 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>             <!-- DDL 자동 생성 -->
                <prop key="hibernate.ejb.naming_strategy">com.jhoon.springboard.util.PrefixNamingStrategy</prop>
            </props>
        </property>
    </bean>
    
    <bean id="writeController" class="com.jhoon.springboard.web.WriteController" />
    <bean id="configController" class="com.jhoon.springboard.web.ConfigController" />
    <bean id="memberController" class="com.jhoon.springboard.web.MemberController" />
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">    
        <property name="locations" value="/WEB-INF/config.properties"/>    
        <property name="fileEncoding" value="UTF-8"/>
    </bean>
    
    <bean id="writeService" class="com.jhoon.springboard.service.WriteService" />

    <!-- Domain Class Converter -->
    <bean class="org.springframework.data.web.config.SpringDataWebConfiguration"/>
    <!--<bean id="sortResolver" class="org.springframework.data.web.SortHandlerMethodArgumentResolver" /> 이를 주석 처리하면 톰캣 구동시 PrefixNamingStrategy 빈생성 에러-->
    
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:argument-resolvers>
            <bean class="org.springframework.data.web.PageableHandlerMethodArgumentResolver">
                <constructor-arg ref="sortResolver" />
                <property name="maxPageSize" value="10"/>
                <property name="oneIndexedParameters" value="true"/>
                <property name="pageParameterName" value="page"/>
                <property name="sizeParameterName" value="size"/>
            </bean>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    
    <bean class="org.springframework.data.repository.support.DomainClassConverter">
        <constructor-arg ref="conversionService"/>
    </bean>
    
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>
    <!-- //Domain Class Converter -->
</beans>
